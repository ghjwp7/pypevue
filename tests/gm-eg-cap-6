// File pypevu.scad, generated  2020-07-17  18:53:33
// by pypevu.py from script "../src/pypevue/examples/eg-cap-6"
$fn = 30;
userPar0 = "";
userPar1 = "";
userPar2 = "";
//include <>

module onePost (diam, hi, yA, zA, px, py, pz)
  translate (v=[px, py, pz]) rotate(a=[0, yA, zA])
      cylinder(d=diam, h=hi);
module makePosts() {
  onePost(2.0, 16.0,   0.000,   0.000,   0.00, 0.00, 70.00 );
  onePost(2.0, 16.0,   0.000, 180.000,   100.00, 0.00, 50.00 );
  onePost(2.0, 16.0,   0.000, -90.000,   50.00, 86.60, 50.00 );
  onePost(2.0, 16.0,   0.000, -90.000,   -50.00, 86.60, 50.00 );
  onePost(2.0, 16.0,   0.000,  -0.000,   -100.00, 0.00, 50.00 );
  onePost(2.0, 16.0,   0.000,   0.000,   -50.00, -86.60, 50.00 );
  onePost(2.0, 16.0,   0.000,   0.000,   50.00, -86.60, 50.00 );
  onePost(2.0, 16.0,   0.000, -90.000,   155.88, 90.00, 30.00 );
  onePost(2.0, 16.0,   0.000, 180.000,   0.00, 180.00, 30.00 );
  onePost(2.0, 16.0,   0.000, -90.000,   -155.88, 90.00, 30.00 );
  onePost(2.0, 16.0,   0.000,   0.000,   -155.88, -90.00, 30.00 );
  onePost(2.0, 16.0,   0.000,   0.000,   -0.00, -180.00, 30.00 );
  onePost(2.0, 16.0,   0.000,  90.000,   155.88, -90.00, 30.00 );
  onePost(2.0, 16.0,   0.000, 180.000,   200.00, 0.00, 0.00 );
  onePost(2.0, 16.0,   0.000, -90.000,   100.00, 173.21, 0.00 );
  onePost(2.0, 16.0,   0.000, -90.000,   -100.00, 173.21, 0.00 );
  onePost(2.0, 16.0,   0.000,  -0.000,   -200.00, 0.00, 0.00 );
  onePost(2.0, 16.0,   0.000,   0.000,   -100.00, -173.21, 0.00 );
  onePost(2.0, 16.0,   0.000,   0.000,   100.00, -173.21, 0.00 );
}
module oneLabel (offset, yA, txt, lx, ly, lz) 
  translate (v=[lx+offset, ly+offset, lz+offset])
    rotate([0, yA, 0]) color(c="Blue") text(size=5.660, text=txt);
module makeLabels() {
  oneLabel(0.667, 0.000, "0",  0.0, 0.0, 86.0);
  oneLabel(0.667, 0.000, "1",  100.0, 0.0, 66.0);
  oneLabel(0.667, 0.000, "2",  50.0, 86.6, 66.0);
  oneLabel(0.667, 0.000, "3",  -50.0, 86.6, 66.0);
  oneLabel(0.667, 0.000, "4",  -100.0, 0.0, 66.0);
  oneLabel(0.667, 0.000, "5",  -50.0, -86.6, 66.0);
  oneLabel(0.667, 0.000, "6",  50.0, -86.6, 66.0);
  oneLabel(0.667, 0.000, "7",  155.88, 90.0, 46.0);
  oneLabel(0.667, 0.000, "8",  0.0, 180.0, 46.0);
  oneLabel(0.667, 0.000, "9",  -155.88, 90.0, 46.0);
  oneLabel(0.667, 0.000, "10",  -155.88, -90.0, 46.0);
  oneLabel(0.667, 0.000, "11",  -0.0, -180.0, 46.0);
  oneLabel(0.667, 0.000, "12",  155.88, -90.0, 46.0);
  oneLabel(0.667, 0.000, "13",  200.0, 0.0, 16.0);
  oneLabel(0.667, 0.000, "14",  100.0, 173.21, 16.0);
  oneLabel(0.667, 0.000, "15",  -100.0, 173.21, 16.0);
  oneLabel(0.667, 0.000, "16",  -200.0, 0.0, 16.0);
  oneLabel(0.667, 0.000, "17",  -100.0, -173.21, 16.0);
  oneLabel(0.667, 0.000, "18",  100.0, -173.21, 16.0);
}
module oneCyl(diam, cylLen, rota, trans, colo)
    translate (v=trans) rotate(a=rota)
      color(c=colo) cylinder(d=diam, h=cylLen);
module makeCylinders() {
  oneCyl (6.000, 94.000, [0, 90.000, 120.000], [98.500, 2.598, 58.000], "Green");
  oneCyl (6.000, 94.000, [0, 90.000, 180.000], [47.000, 86.600, 58.000], "Green");
  oneCyl (6.000, 94.000, [0, 90.000, -120.000], [-51.500, 84.002, 58.000], "Green");
  oneCyl (6.000, 94.000, [0, 90.000, -60.000], [-98.500, -2.598, 58.000], "Green");
  oneCyl (6.000, 94.000, [0, 90.000, 0.000], [-47.000, -86.600, 58.000], "Green");
  oneCyl (6.000, 94.000, [0, 90.000, 60.000], [51.500, -84.002, 58.000], "Green");
  oneCyl (6.000, 101.810, [0, 100.690, 1.840], [52.946, 86.695, 57.443], "Yellow");
  oneCyl (6.000, 101.810, [0, 100.690, 61.840], [-48.609, 89.199, 57.443], "Yellow");
  oneCyl (6.000, 101.810, [0, 100.690, 121.840], [-101.555, 2.504, 57.443], "Yellow");
  oneCyl (6.000, 101.810, [0, 100.690, -178.160], [-52.946, -86.695, 57.443], "Yellow");
  oneCyl (6.000, 101.810, [0, 100.690, -118.160], [48.609, -89.199, 57.443], "Yellow");
  oneCyl (6.000, 101.810, [0, 100.690, -58.160], [101.555, -2.504, 57.443], "Yellow");
  oneCyl (6.000, 101.810, [0, 100.690, 58.160], [101.555, 2.504, 57.443], "Yellow");
  oneCyl (6.000, 101.810, [0, 100.690, 118.160], [48.609, 89.199, 57.443], "Yellow");
  oneCyl (6.000, 101.810, [0, 100.690, 178.160], [-52.946, 86.695, 57.443], "Yellow");
  oneCyl (6.000, 101.810, [0, 100.690, -121.840], [-101.555, -2.504, 57.443], "Yellow");
  oneCyl (6.000, 101.810, [0, 100.690, -61.840], [-48.609, -89.199, 57.443], "Yellow");
  oneCyl (6.000, 101.810, [0, 100.690, -1.840], [52.946, -86.695, 57.443], "Yellow");
  oneCyl (6.000, 98.630, [0, 106.660, 123.880], [154.278, 92.386, 37.140], "Cyan");
  oneCyl (6.000, 98.620, [0, 106.660, -176.120], [-2.868, 179.805, 37.140], "Cyan");
  oneCyl (6.000, 98.630, [0, 106.660, -116.120], [-157.145, 87.419, 37.140], "Cyan");
  oneCyl (6.000, 98.630, [0, 106.660, -56.120], [-154.278, -92.386, 37.140], "Cyan");
  oneCyl (6.000, 98.620, [0, 106.660, 3.880], [2.868, -179.805, 37.140], "Cyan");
  oneCyl (6.000, 98.630, [0, 106.660, 63.880], [157.145, -87.419, 37.140], "Cyan");
  oneCyl (6.000, 98.630, [0, 106.660, -63.880], [157.145, 87.419, 37.140], "Cyan");
  oneCyl (6.000, 98.620, [0, 106.660, -3.880], [2.868, 179.805, 37.140], "Cyan");
  oneCyl (6.000, 98.630, [0, 106.660, 56.120], [-154.278, 92.386, 37.140], "Cyan");
  oneCyl (6.000, 98.630, [0, 106.660, 116.120], [-157.145, -87.419, 37.140], "Cyan");
  oneCyl (6.000, 98.620, [0, 106.660, 176.120], [-2.868, -179.805, 37.140], "Cyan");
  oneCyl (6.000, 98.630, [0, 106.660, -123.880], [154.278, -92.386, 37.140], "Cyan");
  oneCyl (6.000, 105.800, [0, 116.570, 0.000], [102.683, 0.000, 56.658], "Magenta");
  oneCyl (6.000, 105.810, [0, 116.560, 60.000], [51.342, 88.924, 56.658], "Magenta");
  oneCyl (6.000, 105.810, [0, 116.560, 120.000], [-51.342, 88.924, 56.658], "Magenta");
  oneCyl (6.000, 105.800, [0, 116.570, 180.000], [-102.683, 0.000, 56.658], "Magenta");
  oneCyl (6.000, 105.810, [0, 116.560, -120.000], [-51.342, -88.924, 56.658], "Magenta");
  oneCyl (6.000, 105.810, [0, 116.560, -60.000], [51.342, -88.924, 56.658], "Magenta");
  oneCyl (6.000, 95.980, [0, 101.310, 0.000], [2.942, 0.000, 77.412], "White");
  oneCyl (6.000, 95.980, [0, 101.310, 60.000], [1.471, 2.548, 77.412], "White");
  oneCyl (6.000, 95.980, [0, 101.310, 120.000], [-1.471, 2.548, 77.412], "White");
  oneCyl (6.000, 95.980, [0, 101.310, 180.000], [-2.942, 0.000, 77.412], "White");
  oneCyl (6.000, 95.980, [0, 101.310, -120.000], [-1.471, -2.548, 77.412], "White");
  oneCyl (6.000, 95.980, [0, 101.310, -60.000], [1.471, -2.548, 77.412], "White");
}

union() {
  makePosts();
  makeLabels();
  makeCylinders();
}
